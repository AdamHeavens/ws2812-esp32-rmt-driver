name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Install Rust for Xtensa
      uses: esp-rs/xtensa-toolchain@v1.5
      with:
        default: true
        version: "1.74.0"
        ldproxy: true
    - uses: actions/checkout@v3
      with:
        path: ws2812-esp32-rmt-driver
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ws2812-esp32-rmt-driver/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      env:
        RUSTFLAGS: "${{ '--cfg espidf_time64' }}"
      run: cargo build --verbose
      working-directory: ./ws2812-esp32-rmt-driver
    - name: Build example m5atom
      env:
        RUSTFLAGS: "${{ '--cfg espidf_time64' }}"
      run: cargo build --examples --all-features
      working-directory: ./ws2812-esp32-rmt-driver
    - name: Test
      env:
        RUSTFLAGS: "${{ '--cfg espidf_time64' }}"
      run: |
        cargo +stable test --target x86_64-unknown-linux-gnu --lib
        cargo +stable test --target x86_64-unknown-linux-gnu --lib --all-features
        cargo +stable test --target x86_64-unknown-linux-gnu --lib --no-default-features
        cargo +stable test --target x86_64-unknown-linux-gnu --lib --no-default-features --features smart-leds-trait
        cargo +stable test --target x86_64-unknown-linux-gnu --lib --no-default-features --features embedded-graphics-core
      working-directory: ./ws2812-esp32-rmt-driver
    - name: Publish (Dry run)
      env:
        RUSTFLAGS: "${{ '--cfg espidf_time64' }}"
      run: cargo +stable publish --target x86_64-unknown-linux-gnu --dry-run
      working-directory: ./ws2812-esp32-rmt-driver
